#!/bin/sh
#
# Trivial script to load/save current contents of the kernel clock
# from/to the microcontroller RTC. Based on the original Debian script.
#
# Copyright 2012-2016 Steve McIntyre <93sam@debian.org>
# Copyright 2020 Diomidis Spinellis <dds@aueb.gr>
#
# License: GPLv2, see COPYING

if [ "$FILE"x = ""x ] ; then
    FILE=/etc/fake-hwclock.data
fi

# Midnight on the day of this release, used as a sanity check when
# saving
HWCLOCK_EPOCH="2016-04-15 00:00:00"
HWCLOCK_EPOCH_SEC="1460678400"

COMMAND=$1
if [ "$COMMAND"x = ""x ] ; then
    COMMAND="save"
fi

FORCE=false
if [ "$2"x = "force"x ] ; then
    FORCE=true
fi

# Run the Python device_io script with the specified arguments
device_io()
{
  /opt/venvs/epidose/bin/python3 /opt/venvs/epidose/lib/python3.7/site-packages/epidose/device/device_io.py "$@"
}

case $COMMAND in
    save)
        NOW_SEC=$(date -u '+%s')
        if $FORCE || [ $NOW_SEC -ge $HWCLOCK_EPOCH_SEC ] ; then
            device_io -C
        else
            echo "Time travel detected!"
            echo "fake-hwclock release date is in the future: $HWCLOCK_EPOCH"
            echo "Current system time: $(date -u '+%Y-%m-%d %H:%M:%S')"
            echo "To force the saved system clock backwards in time anyway, use \"force\""
        fi
        ;;
    load)
        RTC="$(device_io -c)"
        RTC_SEC=$(date -u -d "$RTC" '+%s')
        NOW_SEC=$(date -u '+%s')
        if $FORCE || [ $NOW_SEC -le $RTC_SEC ] ; then
            date -u -s "$RTC"
        else
            echo "Current system time: $(date -u '+%Y-%m-%d %H:%M:%S')"
            echo "fake-hwclock saved clock information is in the past: $RTC"
            echo "To set system time to this saved clock anyway, use \"force\""
        fi
        ;;
    *)
        echo $0: Unknown command $COMMAND
        exit 1
        ;;
esac
